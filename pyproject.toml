[tool.poetry]
name = "mlops-project-2023"
version = "0.3.0"
description = "MLOps Team Project for the course `Machine Learning Systems Design` at the Cheju Halla University."
authors = ["Young Joon Lee <entelecheia@hotmail.com>"]
license = "MIT"
homepage = "https://chu-ise.github.io/mlops-project-2023"
repository = "https://github.com/chu-ise/mlops-project-2023"
readme = "README.md"
packages = [{ include = "mlops2023", from = "src" }]

[tool.poetry.scripts]
mlops2023 = 'mlops2023.__cli__:main'

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
bentoml = "^1.2.8"
openai = "^1.14.2"
gradio = "^4.22.0"
langchain = "^0.1.13"
transformers = "^4.39.0"
datasets = "^2.18.0"
ffmpeg = "^1.4"
soundfile = "^0.12.1"
llvmlite = "^0.41.1"
librosa = "^0.10.1"
orjson = "^3.10.0"
wikipedia = "^1.4.0"
sentencepiece = "^0.2.0"
cleo = "^2.1.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^7.33.1"
isort = "^5.12.0"
black = "^23.1.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
flake8-pyproject = "^1.2.2"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"

[tool.poe]
include = [".tasks.toml", ".tasks-extra.toml"]

[tool.black]
exclude = ['_version.py', 'node_modules', '_build', 'docs', 'tests', 'venv', '.copier-template', '.refs']

[tool.isort]
profile = "black"
skip = ['_version.py', 'node_modules', '_build', 'docs', 'tests', 'venv', '.copier-template', '.refs']

[tool.flake8]
ignore = ['F401', 'E501', 'W503']
exclude = ["node_modules", "_build", "docs", "tests", "venv", ".copier-template", ".refs"]
per-file-ignores = ['__init__.py:F401', '_version.py:W292']

[tool.mypy]
namespace_packages = true
exclude = ["node_modules", "build", "_build", "dist", "docs", "tests", "venv", ".copier-template", ".refs"]
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = true
disallow_any_generics = false
disallow_subclassing_any = true
# platform
python_version = "3.8"
# untyped
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:cacheprovider" # deactivating pytest caching.

[tool.coverage.report]
exclude_lines = ['if __name__ == "__main__":']

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"

[tool.semantic_release]
branch = "main"
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = "src/mlops2023/_version.py:__version__"
version_pattern = 'src/mlops2023/conf/about/__init__.yaml:version: "{version}"'
version_source = "tag"
commit_version_number = true # required for version_source = "tag"
commit_subject = "chore(release): :rocket: {version} [skip ci]"
prerelease_tag = "rc"
major_on_zero = true
tag_commit = true
changelog_file = "CHANGELOG.md"
upload_to_repository = false
upload_to_release = true
hvcs = "github" # hosting version control system, gitlab is also supported
build_command = "poetry build --no-cache"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

